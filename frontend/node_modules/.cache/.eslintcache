[{"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/index.js":"1","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/App.js":"2","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/Staff.jsx":"3","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Start/Start.jsx":"4","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Customer.jsx":"5","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/NotFound/NotFound.jsx":"6","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/components/Panel.jsx":"7","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Payment.jsx":"8","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Reservation.jsx":"9","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Order.jsx":"10","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Table.jsx":"11","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/Restaurant.jsx":"12","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/PrivateRestaurant.jsx":"13","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Start/Team.jsx":"14"},{"size":234,"mtime":1699198245530,"results":"15","hashOfConfig":"16"},{"size":1588,"mtime":1699201318872,"results":"17","hashOfConfig":"16"},{"size":1119,"mtime":1699198245538,"results":"18","hashOfConfig":"16"},{"size":983,"mtime":1699198245538,"results":"19","hashOfConfig":"16"},{"size":1503,"mtime":1699198245531,"results":"20","hashOfConfig":"16"},{"size":153,"mtime":1699198245531,"results":"21","hashOfConfig":"16"},{"size":193,"mtime":1699198245530,"results":"22","hashOfConfig":"16"},{"size":105,"mtime":1699198245531,"results":"23","hashOfConfig":"16"},{"size":2446,"mtime":1699198245531,"results":"24","hashOfConfig":"16"},{"size":99,"mtime":1699198245531,"results":"25","hashOfConfig":"16"},{"size":6168,"mtime":1699200985829,"results":"26","hashOfConfig":"16"},{"size":11508,"mtime":1699201171993,"results":"27","hashOfConfig":"16"},{"size":11168,"mtime":1699201052249,"results":"28","hashOfConfig":"16"},{"size":2241,"mtime":1699203888804,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1dmulnb",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/index.js",[],[],["77"],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/App.js",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/Staff.jsx",["78"],[],"import React, { useState } from 'react';\n\nimport { Box, Tab, Tabs } from '@mui/material';\nimport { Payments, TableRestaurant } from '@mui/icons-material';\n\nimport Restaurant from './Restaurant';\nimport PrivateRestaurant from './PrivateRestaurant';\nimport Panel from '../../components/Panel';\n\nfunction Staff() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: 'divider'\n        }}\n      >\n        <Tabs value={value} onChange={handleChange}>\n          <Tab icon={<TableRestaurant />} label='General Section' sx={{ width: '100%' }} /> \n          <Tab icon={<TableRestaurant />} label='Private Section' sx={{ width: '100%' }} /> \n          {/* <Tab icon={<Payments />} label='Buy Ingredients' sx={{ width: '100%' }} /> */}\n        </Tabs>\n      </Box>\n\n      <Panel value={value} index={0}>\n        <Restaurant />\n      </Panel>\n\n      <Panel value={value} index={1}>\n        <PrivateRestaurant />\n      </Panel>\n\n    </Box>\n  );\n}\n\nexport default Staff;\n","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Start/Start.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Customer.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/NotFound/NotFound.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/components/Panel.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Payment.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Reservation.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Order.jsx",[],[],"/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Customer/Table.jsx",["79","80"],[],"import React from 'react';\nimport { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Link } from 'react-router-dom';\nimport ghostImage from '../assets/SVG/customer_1.svg'; \nimport tableImage from '../assets/SVG/table.svg';\n\nconst Table = () => {\n\n    const handleSendOrder = () => {\n    // fetch('https://api.example.com/send-order', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(yourOrderData),\n    // })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     console.log(data);\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n    };\n\n    const handlePayOrder = () => {   \n    // fetch('https://api.example.com/pay-order', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify(yourPaymentData),\n    // })\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     console.log(data);\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n    };\n\n    const [sendOrderHovered, setSendOrderHovered] = useState(false);\n    const [payOrderHovered, setPayOrderHovered] = useState(false);\n\n    const floatAnimation = useSpring({\n        from: {\n            transform: 'translate(0, 0)',\n            opacity: 1,\n        },\n        to: async (next) => {\n            while (true) {\n            await next({\n                transform: 'translate(0, -50px)',\n                opacity: 0.7,\n            });\n            await next({\n                transform: 'translate(0, 50px)',\n                opacity: 1,\n            });\n            }\n        },\n        config: { duration: 2000 }, \n    });\n\n    return (\n        <div style={containerStyle}>\n            <div className=\"row mt-5\">\n                <div className='col-3 '>\n                    {/* <img src={customerImage} alt=\"Customer\" style={imageStyle} /> */}\n                    <animated.img \n                    src={ghostImage}\n                    alt=\"Customer\"\n                    style={{\n                    ...floatAnimation,\n                    position: 'absolute',\n                    top: '100px', \n                    left: '0px',\n                    width: '150px', \n                    height: 'auto', \n                    zindex: '999',\n                    }}\n                />\n                </div>\n                <div className='col-9 '>\n                    <img src={tableImage} alt=\"Table\" style={imageStyle2} />\n                </div>\n                \n                <div className='row justify-content-center col-12 mt-5'>\n                <Link to=\"/order\">\n                    <button className=\"col-5 mt-5 button-64 mx-3\" style={buttonStyle} onClick={handleSendOrder} onMouseEnter={() => setSendOrderHovered(true)}\n                    onMouseLeave={() => setSendOrderHovered(false)}>\n                        <span style={{\n                        ...spanStyle,\n                        background: sendOrderHovered ? 'none' : spanStyle.backgroundColor,\n                        }}>Send Order</span>   \n                    </button>\n                </Link>\n                <Link to=\"/payment\">\n                    <button className=\"col-5 mt-5 button-64 mx-3\" style={buttonStyle} onClick={handlePayOrder} onMouseEnter={() => setPayOrderHovered(true)}\n            onMouseLeave={() => setPayOrderHovered(false)}>\n                        <span style={{\n                        ...spanStyle,\n                        background: payOrderHovered ? 'none' : spanStyle.backgroundColor,\n                        }}>Pay Order</span>   \n                    </button>\n                </Link>\n                </div> \n            </div>\n\n            <div className=\"row \" style={footerSec}>\n                <div className=\"col-2 mt-1 mx-2 justify-content-center\">\n                    <p>some logo?</p>\n                </div>\n           \n                <button className=\"col-2 mt-1 mx-2 justify-content-center\" style={buttonStyle}>\n                    <a href=\"https://github.com/Gini24mp/Kitchen-of-Secrets\">GitHub</a>\n                </button>  \n\n                <button className=\"col-2 mt-1 mx-2 justify-content-center\" style={buttonStyle}>\n                    <a href=\"\">Documentation</a>\n                    {/* this would be a link to doxygen */}\n                </button> \n            </div>\n            \n        </div>\n    );\n}\n\nconst containerStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // height: '100vh',\n    width: '100vw',\n    padding: '10px',\n    fontFamily: 'Roboto',\n};\n\nconst imageStyle = {\n    width: '150px', \n\n};\n\nconst imageStyle2 = {\n    width: '600px', \n    marginleft: '50%',\n};\n\n// const buttonStyle2 = {\n//     // margin: '10px',\n//     padding: '10px',\n//     fontSize: '16px',\n//     backgroundColor: '#',\n// };\n\nconst buttonStyle = {\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(144deg, #AF40FF, #5B42F3 50%, #00DDEB)',\n    border: '0',\n    borderRadius: '8px',\n    boxShadow: 'rgba(151, 65, 252, 0.2) 0 15px 30px -5px',\n    boxSizing: 'border-box',\n    color: '#FFFFFF',\n    display: 'flex',\n    fontFamily: 'Phantomsans, sans-serif',\n    fontSize: '20px',\n    justifyContent: 'center',\n    lineHeight: '1em',\n    maxWidth: '100%',\n    minWidth: '140px',\n    padding: '3px',\n    textDecoration: 'none',\n    userSelect: 'none',\n    WebkitUserSelect: 'none',\n    touchAction: 'manipulation',\n    whiteSpace: 'nowrap',\n    cursor: 'pointer',\n  };\n  \n  const spanStyle = {\n    backgroundColor: 'rgb(5, 6, 45)',\n    padding: '16px 24px',\n    borderRadius: '6px',\n    width: '100%',\n    height: '100%',\n    transition: 'background 300ms', \n  };\n\nconst footerSec = {\n    position: 'absolute',\n    bottom: '0',\n    width: '100%',\n    height: '60px',\n    // backgroundColor: '#f5f5f5',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '12px',\n    color: 'white',\n}\n\nexport default Table;\n","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/Restaurant.jsx",["81","82","83","84"],[],"import React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDrag } from 'react-use-gesture';\nimport { useSpring, animated } from 'react-spring';\nimport { interpolate } from 'react-spring';\n\nimport managerImage from '../assets/SVG/manager_1.svg';  \nimport waiterImage from '../assets/SVG/waiter1_1.svg'; \nimport waiterImage2 from '../assets/SVG/waiter2.svg'; \nimport tableImage from '../assets/SVG/table.svg';\nimport pumpkinImage from '../assets/SVG/pumpkin_1.svg';\nimport headChefImage from '../assets/SVG/headChef.svg';\n\nconst Restaurant = () => {\n    const handleDoRounds = () => {\n      // Set head chef to be visible\n      setHeadChefVisible(true);\n\n        // Create and send your JSON request for doing rounds.\n        // Example:\n        // fetch('https://api.example.com/do-rounds', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourDoRoundsData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    const handleBuyIngredients = () => {\n        // Create and send your JSON request for buying more ingredients.\n        // Example:\n        // fetch('https://api.example.com/buy-ingredients', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourBuyIngredientsData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    const handleSendWaiter = () => {\n        // Create and send your JSON request for sending a waiter to a table.\n        // Example:\n        // fetch('https://api.example.com/send-waiter', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourSendWaiterData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    //animation for manager\n    const [teetered, setTeetered] = useState(false);\n\n    const teeterAnimation = {\n      transformOrigin: 'center bottom', // Set the pivot point at the bottom center of the image\n      transition: 'transform 1s ease-in-out', // Define the transition property for smooth animation\n      transform: 'rotate(0deg)', // Initial position\n    };\n    \n    if (teetered) {\n      teeterAnimation.transform = 'rotate(8deg)'; // Final position when hovering\n    }\n\n    const [roundsHovered, setRoundsHovered] = useState(false);\n    const [buyMoreHovered, setBuyMoreHovered] = useState(false);\n    const [sendWaiterHovered, setSendWaiterHovered] = useState(false);\n   \n    // Initial positions for waiters\n    const [waiterPosition, setWaiterPosition] = useState({ x: 100, y: 150 });\n    const [waiterPosition2, setWaiterPosition2] = useState({ x: 100, y: 200 });\n\n    // this is the drag function for the waiter within table section...which is not specific to the tables.\n    const bindWaiter = useDrag(({ offset: [x, y] }) => {\n      setWaiterPosition({ x, y });\n    });\n\n    const bindWaiter2 = useDrag(({ offset: [x, y] }) => {\n        setWaiterPosition2({ x, y });\n    });\n\n    const currBalance = () => {\n      // this is where you call the current balance of the manager/player\n    }\n  \n    //managing the animation of the headChef\n    const [headChefVisible, setHeadChefVisible] = useState(false);\n    const [headChefPosition, setHeadChefPosition] = useState({ x: -200, y: 0 });\n\n    const chefAnimation = useSpring({\n      to: async (next, cancel) => {\n        // Chef appears and walks across the table\n        await next({ x: 850 });\n        // Chef walks back and disappears\n        await next({ x: -100 });\n        setHeadChefVisible(false); // Hide the chef when the animation is done\n      },\n      from: { x: -200 },\n      config: { duration: 7000 }, \n      onRest: () => {\n        // Animation has finished\n      },\n    });\n  return (\n      <div style={containerStyle}>\n      {/* this is the waiter section */}\n      <img\n          src={waiterImage}\n          alt=\"Waiter\"\n          style={{\n              ...imageStyle3,\n              transform: `translate3d(${waiterPosition.x}px, ${waiterPosition.y}px, 0)`,\n          }}\n          {...bindWaiter()}\n        />\n        <img\n            src={waiterImage2}\n            alt=\"Waiter\"\n            style={{\n                ...imageStyle3,\n                transform: `translate3d(${waiterPosition2.x}px, ${waiterPosition2.y}px, 0)`,\n            }}\n            {...bindWaiter2()}\n        />\n      <div className=\"container\">\n        <div className='row justify-content-center'><h3>Your Current Balance is: ${currBalance}</h3></div>\n        <div className=\"row mt-5\">\n            <div className='col-3 '>\n                <img src={managerImage} alt=\"Manager\" style={{ ...imageStyle, ...teeterAnimation }}\n                  onMouseEnter={() => setTeetered(true)}\n                  onMouseLeave={() => setTeetered(false)} /> \n            </div>\n            <div className='col-9'> \n              {/* this is the table section below */}\n              <div style={tableContainerStyle}>\n              <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n              </div>\n              {headChefVisible && (\n              <div style={chefContainerStyle}>\n                <animated.img\n                  src={headChefImage}\n                  alt=\"Head Chef\"\n                  style={{\n                    ...imageStyle3,\n                    transform: chefAnimation.x.interpolate(x => `translate3d(${x}px, ${headChefPosition.y}px, 0)`),\n                  }}\n                />\n              </div>\n            )}\n            </div>\n            <div className='row justify-content-center col-12 mt-5'>\n                <button className=\"col-4 mt-5 mr-2 button-64 \" onClick={handleDoRounds} style={buttonStyle} onMouseEnter={() => setRoundsHovered(true)} onMouseLeave={() => setRoundsHovered(false)}>\n                  <span style={{\n                      ...spanStyle,\n                      background: roundsHovered ? 'none' : spanStyle.backgroundColor,\n                      }}>Do Rounds</span>\n                </button>\n                <button className=\"col-4 mt-5 mr-2 button-64 \" style={buttonStyle} onMouseEnter={() => setBuyMoreHovered(true)} onMouseLeave={() => setBuyMoreHovered(false)} onClick={handleBuyIngredients}>\n                  <span style={{\n                      ...spanStyle,\n                      background: buyMoreHovered ? 'none' : spanStyle.backgroundColor,\n                      }}>Buy More Ingredients</span>\n                </button>\n                <button className=\"col-4 mt-3 button-64 \" style={buttonStyle} onMouseEnter={() => setSendWaiterHovered(true)} onMouseLeave={() => setSendWaiterHovered(false)} onClick={handleSendWaiter}>\n                  <span style={{\n                      ...spanStyle,\n                      background: sendWaiterHovered ? 'none' : spanStyle.backgroundColor,\n                      }}>Send Waiter to Table</span>\n                </button>\n            </div>\n        </div>\n      </div>\n      \n      <div className=\"row \" style={footerSec}>\n          <div className=\"col-2 mt-1 mx-2 justify-content-center\">\n              <p>some logo? </p>\n          </div>\n    \n          <button className=\"col-2 mt-1 mx-2 justify-content-center\" style={buttonStyle2}>\n              <a href=\"https://github.com/Gini24mp/Kitchen-of-Secrets\">GitHub</a>\n          </button>  \n\n          <button className=\"col-2 mt-1 mx-2 justify-content-center\" style={buttonStyle2}>\n              <a href=\"\">Documentation</a>\n              {/* this would be a link to doxygen */}\n          </button> \n      </div>          \n          \n    </div>\n  );\n\n}\n\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // height: '100vh',\n  width: '100vw',\n  padding: '10px',\n  fontFamily: 'Roboto',\n  // position: 'relative', // Add this line\n  backgroundImage: `url(${pumpkinImage})`, // Add this line\n  backgroundRepeat: 'no-repeat', // Add this line\n  backgroundSize: '200px', // Add this line\n  backgroundPosition: 'bottom right', // Add this line\n};\n\nconst imageStyle = {\n  width: '150px', \n};\n\nconst imageStyle2 = {\n  width: '600px', \n  marginleft: '50%',\n};\n\nconst imageStyle3 = {\n    width: '90px', \n    marginleft: '40%',\n};\n\nconst buttonStyle = {\n  alignItems: 'center',\n  backgroundImage: 'linear-gradient(144deg, #AF40FF, #5B42F3 50%, #00DDEB)',\n  border: '0',\n  borderRadius: '8px',\n  boxShadow: 'rgba(151, 65, 252, 0.2) 0 15px 30px -5px',\n  boxSizing: 'border-box',\n  color: '#FFFFFF',\n  display: 'flex',\n  fontFamily: 'Phantomsans, sans-serif',\n  fontSize: '20px',\n  justifyContent: 'center',\n  lineHeight: '1em',\n  maxWidth: '100%',\n  minWidth: '140px',\n  padding: '3px',\n  textDecoration: 'none',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  touchAction: 'manipulation',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n};\n\nconst buttonStyle2 = {\n  alignItems: 'center',\n  backgroundImage: 'black',\n  border: '0',\n  borderRadius: '8px',\n  boxShadow: 'rgba(151, 65, 252, 0.2) 0 15px 30px -5px',\n  boxSizing: 'border-box',\n  color: '#FFFFFF',\n  display: 'flex',\n  fontFamily: 'Phantomsans, sans-serif',\n  fontSize: '20px',\n  justifyContent: 'center',\n  lineHeight: '1em',\n  maxWidth: '100%',\n  minWidth: '140px',\n  padding: '3px',\n  textDecoration: 'none',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  touchAction: 'manipulation',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n}\n\nconst spanStyle = {\n  backgroundColor: 'rgb(5, 6, 45)',\n  padding: '16px 24px',\n  borderRadius: '6px',\n  width: '100%',\n  height: '100%',\n  transition: 'background 300ms', \n};\n\nconst footerSec = {\n  position: 'absolute',\n  bottom: '0',\n  width: '100%',\n  height: '60px',\n  // backgroundColor: '#f5f5f5',\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontSize: '12px',\n  color: 'white',\n}\n\nconst tableContainerStyle = {\n  position: 'relative', // Required to maintain relative positioning of tableImage elements\n};\n\nconst chefContainerStyle = {\n  position: 'absolute', // Positioned absolutely to appear in front\n  top: 0,\n  left: 0,\n  zIndex: 1, // Higher z-index to appear in front of tableImage elements\n};\n\n\n\nexport default Restaurant;\n","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Staff/PrivateRestaurant.jsx",["85","86","87","88","89"],[],"import React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDrag } from 'react-use-gesture';\nimport { useSpring, animated } from 'react-spring';\nimport { interpolate } from 'react-spring';\n\nimport managerImage from '../assets/SVG/manager_1.svg'; \nimport waiterImage from '../assets/SVG/waiter1_1.svg'; \nimport waiterImage2 from '../assets/SVG/waiter2.svg'; \nimport tableImage from '../assets/SVG/privTable.svg';\nimport pumpkinImage from '../assets/SVG/pumpkin_1.svg';\nimport headChefImage from '../assets/SVG/headChef.svg';\n\nconst PrivateRestaurant = () => {\n    const handleDoRounds = () => {\n      setHeadChefVisible(true);\n        // Create and send your JSON request for doing rounds.\n        // Example:\n        // fetch('https://api.example.com/do-rounds', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourDoRoundsData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    const handleBuyIngredients = () => {\n        // Create and send your JSON request for buying more ingredients.\n        // Example:\n        // fetch('https://api.example.com/buy-ingredients', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourBuyIngredientsData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    const handleSendWaiter = () => {\n        // Create and send your JSON request for sending a waiter to a table.\n        // Example:\n        // fetch('https://api.example.com/send-waiter', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify(yourSendWaiterData),\n        // })\n        //   .then(response => response.json())\n        //   .then(data => {\n        //     console.log(data);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n    };\n\n    //animation for manager\n    const [teetered, setTeetered] = useState(false);\n\n    const teeterAnimation = {\n      transformOrigin: 'center bottom', // Set the pivot point at the bottom center of the image\n      transition: 'transform 1s ease-in-out', // Define the transition property for smooth animation\n      transform: 'rotate(0deg)', // Initial position\n    };\n    \n    if (teetered) {\n      teeterAnimation.transform = 'rotate(8deg)'; // Final position when hovering\n    }\n\n    const [roundsHovered, setRoundsHovered] = useState(false);\n    const [buyMoreHovered, setBuyMoreHovered] = useState(false);\n    const [sendWaiterHovered, setSendWaiterHovered] = useState(false);\n   \n    // Initial positions for waiters\n    const [waiterPosition, setWaiterPosition] = useState({ x: 100, y: 150 });\n    const [waiterPosition2, setWaiterPosition2] = useState({ x: 100, y: 200 });\n\n    // this is the drag function for the waiter within table section...which is not specific to the tables.\n    const bindWaiter = useDrag(({ offset: [x, y] }) => {\n      setWaiterPosition({ x, y });\n    });\n\n    const bindWaiter2 = useDrag(({ offset: [x, y] }) => {\n        setWaiterPosition2({ x, y });\n    });\n\n    const currBalance = () => {\n      // this is where you call the current balance of the manager/player\n    }\n  \n    //managing the animation of the headChef\n    const [headChefVisible, setHeadChefVisible] = useState(false);\n    const [headChefPosition, setHeadChefPosition] = useState({ x: -500, y: 50 });\n\n    const chefAnimation = useSpring({\n      to: async (next, cancel) => {\n        // Chef appears and walks across the table\n        await next({ x: 850 });\n        // Chef walks back and disappears\n        await next({ x: -100 });\n        setHeadChefVisible(false); // Hide the chef when the animation is done\n      },\n      from: { x: -500 },\n      config: { duration: 7000 }, \n      onRest: () => {\n        // Animation has finished\n      },\n    });\n\n  return (\n      <div style={containerStyle}>\n      {/* this is the waiter section */}\n      <img\n            src={waiterImage}\n            alt=\"Waiter\"\n            style={{\n                ...imageStyle3,\n                transform: `translate3d(${waiterPosition.x}px, ${waiterPosition.y}px, 0)`,\n            }}\n            {...bindWaiter()}\n        />\n        <img\n            src={waiterImage2}\n            alt=\"Waiter\"\n            style={{\n                ...imageStyle3,\n                transform: `translate3d(${waiterPosition2.x}px, ${waiterPosition2.y}px, 0)`,\n            }}\n            {...bindWaiter2()}\n        />\n      <div className=\"container\">\n        <div className='row justify-content-center'><h3>Your Current Balance is: ${currBalance}</h3></div>\n        <div className=\"row mt-5\">\n          <div className='col-3 '>\n              <img src={managerImage} alt=\"Manager\" style={{ ...imageStyle, ...teeterAnimation }}\n                  onMouseEnter={() => setTeetered(true)}\n                  onMouseLeave={() => setTeetered(false)} />\n          </div>\n          <div className='col-9'> \n            <div style={tableContainerStyle}>\n            {/* this is the table section below */}\n            <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            <img className=\"col-3 mt-5\" src={tableImage} alt=\"Table\" style={imageStyle2} />\n            </div>\n            {headChefVisible && (\n              <div style={chefContainerStyle}>\n                <animated.img\n                  src={headChefImage}\n                  alt=\"Head Chef\"\n                  style={{\n                    ...imageStyle3,\n                    transform: chefAnimation.x.interpolate(x => `translate3d(${x}px, ${headChefPosition.y}px, 0)`),\n                  }}\n                />\n              </div>\n            )}\n          </div>\n          <div className='row justify-content-center col-12 mt-5'>\n              <button className=\"col-4 mt-5 mr-2 button-64 \" onClick={handleDoRounds} style={buttonStyle} onMouseEnter={() => setRoundsHovered(true)} onMouseLeave={() => setRoundsHovered(false)}>\n                <span style={{\n                    ...spanStyle,\n                    background: roundsHovered ? 'none' : spanStyle.backgroundColor,\n                    }}>Do Rounds</span>\n              </button>\n              <button className=\"col-4 mt-5 mr-2 button-64 \" style={buttonStyle} onMouseEnter={() => setBuyMoreHovered(true)} onMouseLeave={() => setBuyMoreHovered(false)} onClick={handleBuyIngredients}>\n                <span style={{\n                    ...spanStyle,\n                    background: buyMoreHovered ? 'none' : spanStyle.backgroundColor,\n                    }}>Buy More Ingredients</span>\n              </button>\n              <button className=\"col-4 mt-3 button-64 \" style={buttonStyle} onMouseEnter={() => setSendWaiterHovered(true)} onMouseLeave={() => setSendWaiterHovered(false)} onClick={handleSendWaiter}>\n                <span style={{\n                    ...spanStyle,\n                    background: sendWaiterHovered ? 'none' : spanStyle.backgroundColor,\n                    }}>Send Waiter to Table</span>\n              </button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"row \" style={footerSec}>\n          <div className=\"col-2 mt-4 mx-2 justify-content-center\">\n              <p>some logo? </p>\n          </div>\n    \n          <button className=\"col-2 mt-4 mx-2 justify-content-center\" style={buttonStyle2}>\n              <a href=\"https://github.com/Gini24mp/Kitchen-of-Secrets\">GitHub</a>\n          </button>  \n\n          <button className=\"col-2 mt-4 mx-2 justify-content-center\" style={buttonStyle2}>\n              <a href=\"\">Documentation</a>\n              {/* this would be a link to doxygen */}\n          </button> \n      </div>                \n    </div>\n  );\n\n}\n\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // height: '100vh',\n  width: '100vw',\n  padding: '10px',\n  fontFamily: 'Roboto',\n};\n\nconst imageStyle = {\n  width: '150px', \n};\n\nconst imageStyle2 = {\n  width: '600px', \n  marginleft: '50%',\n};\n\nconst imageStyle3 = {\n    width: '90px', \n    marginleft: '40%',\n};\n\nconst buttonStyle = {\n  alignItems: 'center',\n  backgroundImage: 'linear-gradient(144deg, #AF40FF, #5B42F3 50%, #00DDEB)',\n  border: '0',\n  borderRadius: '8px',\n  boxShadow: 'rgba(151, 65, 252, 0.2) 0 15px 30px -5px',\n  boxSizing: 'border-box',\n  color: '#FFFFFF',\n  display: 'flex',\n  fontFamily: 'Phantomsans, sans-serif',\n  fontSize: '20px',\n  justifyContent: 'center',\n  lineHeight: '1em',\n  maxWidth: '100%',\n  minWidth: '140px',\n  padding: '3px',\n  textDecoration: 'none',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  touchAction: 'manipulation',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n};\n\nconst buttonStyle2 = {\n  alignItems: 'center',\n  backgroundImage: 'black',\n  border: '0',\n  borderRadius: '8px',\n  boxShadow: 'rgba(151, 65, 252, 0.2) 0 15px 30px -5px',\n  boxSizing: 'border-box',\n  color: '#FFFFFF',\n  display: 'flex',\n  fontFamily: 'Phantomsans, sans-serif',\n  fontSize: '20px',\n  justifyContent: 'center',\n  lineHeight: '1em',\n  maxWidth: '100%',\n  minWidth: '140px',\n  padding: '3px',\n  textDecoration: 'none',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  touchAction: 'manipulation',\n  whiteSpace: 'nowrap',\n  cursor: 'pointer',\n}\n\nconst spanStyle = {\n  backgroundColor: 'rgb(5, 6, 45)',\n  padding: '16px 24px',\n  borderRadius: '6px',\n  width: '100%',\n  height: '100%',\n  transition: 'background 300ms', \n};\n\nconst footerSec = {\n  position: 'absolute',\n  bottom: '0',\n  width: '100%',\n  height: '60px',\n  // backgroundColor: '#f5f5f5',\n  textAlign: 'center',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontSize: '12px',\n  color: 'white',\n}\n\nconst tableContainerStyle = {\n  position: 'relative', // Required to maintain relative positioning of tableImage elements\n};\n\nconst chefContainerStyle = {\n  position: 'absolute', // Positioned absolutely to appear in front\n  top: 0,\n  left: 0,\n  zIndex: 1, // Higher z-index to appear in front of tableImage elements\n};\n\nexport default PrivateRestaurant;\n","/Users/thatokalagobe/Desktop/COS 214 2023/project/Kitchen-of-Secrets/frontend/src/pages/Start/Team.jsx",["90"],[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":122,"column":21,"nodeType":"99","endLine":122,"endColumn":32},{"ruleId":"93","severity":1,"message":"100","line":142,"column":7,"nodeType":"95","messageId":"96","endLine":142,"endColumn":17},{"ruleId":"93","severity":1,"message":"101","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":112,"column":30,"nodeType":"95","messageId":"96","endLine":112,"endColumn":49},{"ruleId":"97","severity":1,"message":"98","line":215,"column":15,"nodeType":"99","endLine":215,"endColumn":26},{"ruleId":"93","severity":1,"message":"101","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":21},{"ruleId":"93","severity":1,"message":"104","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":20},{"ruleId":"93","severity":1,"message":"103","line":110,"column":30,"nodeType":"95","messageId":"96","endLine":110,"endColumn":49},{"ruleId":"97","severity":1,"message":"98","line":214,"column":15,"nodeType":"99","endLine":214,"endColumn":26},{"ruleId":"93","severity":1,"message":"105","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":13},"no-new-object",["106"],"no-unused-vars","'Payments' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'imageStyle' is assigned a value but never used.","'Link' is defined but never used.","'interpolate' is defined but never used.","'setHeadChefPosition' is assigned a value but never used.","'pumpkinImage' is defined but never used.","'Thato' is defined but never used.","no-object-constructor"]